using UnityEngine;

/// <summary>
/// Some equipment properties.
/// </summary>
[System.Serializable]
public class EquipmentProperties
{
	/// <summary>
	/// Link to slot where the equipment mounted.
	/// </summary>
	[HideInInspector]
	public TypicalSlot mySlot;

	/// <summary>
	/// Type of the equipment. <see cref="EquipmentType.Weapon"/>, <see cref="EquipmentType.Hull"/>, <see cref="EquipmentType.Engine"/> or <see cref="EquipmentType.Misc"/>
	/// <seealso cref="EquipmentType"/>
	/// </summary>
	public EquipmentType type;
	
	/// <summary>
	/// The icon of equipment unit to show in interfaces.
	/// </summary>
	public Material icon;

	/// <summary>
	/// Weight of this equipment unit.
	/// </summary>
	public float weight;

	/// <summary>
	/// Amount of Energy Points that can accumulate this equipment unit to total of ship
	/// </summary>
	public float energyCapacity;
	
	/// <summary>
	/// Amount of Energy Points regenerated by this equipment unit.
	/// </summary>
	public float energyRegen;

	/// <summary>
	/// Amount of HP to add  to total HP of the master ship.
	/// </summary>
	public float hullPointsBonus;
	
	/// <summary>
	/// Amount of HP that will be restored.
	/// </summary>
	public float hullPointsRegen;
	
	/// <summary>
	/// The shield bonus of the ship.
	/// </summary>
	public float shieldCapacity;
	
	/// <summary>
	/// The shield regeneration points per second.
	/// </summary>
	public float shieldRegen;
	
	/// <summary>
	/// The delay after last damage the shield starts regenereation.
	/// </summary>
	public float shieldRegenDelay;
	
	/// <summary>
	/// Min value the ship can move. If there are two different values - the lesser will be used.
	/// </summary>
	public float minSpeedValue;
	
	/// <summary>
	/// Ship movement max speed bonus. Cap that ship can reach.
	/// </summary>
	public float maxSpeedBonus;

	/// <summary>
	/// Bonus to maximum speed the ship can strafe sidewards.
	/// </summary>
	public float strafeSpeedBonus;

	/// <summary>
	/// Bonus to the ship acceleration and deceleration .
	/// </summary>
	public float speedAccelerationBonus;
}
